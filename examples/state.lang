get: effect unit * (resume i32 -> i32 -> i32) -> i32;

set: effect i32 * (resume unit -> i32 -> i32) -> unit;

state :: handler {
	get :: (u: unit, f: resume i32 -> i32 -> i32) -> i32 -> i32 {
		return (s: i32) {
			return f(s)(s);
		}
	}

	set :: (s: i32, f: resume unit -> i32 -> i32) -> unit -> i32 {
		return () {
			return f()(s);
		}
	}
}


f :: () -> i32 | set! | get! {
	set!(3);

	x :: get!();

	set!(4);

	y :: get!();

	return x + y;
}

main :: () -> i32 {
	g :: f() with state;
	x :: g(0);

	return x;
}

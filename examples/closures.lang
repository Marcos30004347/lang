

F : unit -> unit -> i32: () {
	x : i32 : 0;
	
	K : unit -> i32 : () {
		return x;
	}
	
	return K;
}

A :: () {
	w : i32 = 0; 
	x : i32 = 0;

	B : unit -> unit -> i32: () {
		y : i32 = 0;
		z : i32 = 0;

		C : unit -> i32 : () {
			t :: w + y;
			return t;
		}

		E : unit -> i32 : () {
			t :: x + z;
			return t;
		}

		t : i32 : 0;
		j : i32 : 0;
		
		if t {
			return C;
		}

		if j {
			q : unit -> i32 : F();
			return q;
		}

		return E;
	}

	H : unit -> i32 : B();
	
	//NOTE(marcos): H is a valid return because it is computed by a local declared function
	return H;
}

j :: () {
	x : i32 = 0;
	
	f : unit -> unit -> i32 : () {
		x = x + 1;

		g : unit -> i32 : () {
			return x;
		}
		
		return g;
	}

	y : unit -> i32 : f();
	
	return y;
}
